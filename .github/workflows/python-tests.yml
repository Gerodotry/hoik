name: CI Pipeline

on:
  push:
    branches:
      - master  # Змініть на вашу основну гілку, якщо потрібно
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  # Встановіть версію Python, яку ви використовуєте

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install django djangorestframework  # Встановіть ваші залежності

      - name: Run tests
        run: |
          python manage.py test --verbosity=2 --failfast > results.txt; \
          if [ -f results.txt ]; then echo "Test results:"; cat results.txt; fi

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: results.txt

  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    needs: test  # Ensure build job runs after the test job
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  

      - name: Set up SonarScanner CLI
        run: |
          sudo apt-get install unzip
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          unzip sonar-scanner-cli-*.zip -d $HOME/sonar-scanner
          echo "$HOME/sonar-scanner/sonar-scanner-4.7.0.2747-linux/bin" >> $GITHUB_PATH

      - name: SonarQube Analysis
        run: |
          sonar-scanner \
          -Dsonar.projectKey=my_django_project_key \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=squ_55557bd7a794d3250381a20fccc3fdd68e3349ff

      - name: SonarQube Scan with GitHub Action
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: squ_55557bd7a794d3250381a20fccc3fdd68e3349ff
